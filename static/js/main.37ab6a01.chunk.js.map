{"version":3,"sources":["components/Alert.jsx","assets/no_image.png","components/Book.jsx","components/Books.jsx","utility/constants.js","components/Pagination.jsx","App.js","index.js"],"names":["Alert","alert","class","useStyles","makeStyles","theme","root","height","width","display","flexDirection","justifyContent","padding","image","margin","avatar","backgroundColor","red","categories","color","textAlign","title","fontWeight","lineHeight","maxHeight","boxOrient","lineClamp","wordBreak","overflow","authors","fontSize","Book","book","handleCardFlip","isFlipped","classes","React","useState","expanded","volumeInfo","description","language","infoLink","imageLinks","thumbnail","Image","className","flipDirection","containerStyle","minHeight","Card","href","target","src","alt","CardHeader","titleTypographyProps","variant","Typography","length","join","CardActions","disableSpacing","Avatar","aria-label","toUpperCase","component","IconButton","onClick","aria-expanded","CardContent","paragraph","slice","Books","books","page","Array","fill","bookStatus","setBookStatus","setIsFlipped","startIndex","selectedBooks","map","index","bookStatusCopy","console","log","id","alignItems","spacing","container","Pagination","totalPages","handleClick","pages","keys","num","ButtonGroup","Button","borderBottom","spinner","search","borderRadius","App","query","setQuery","setBooks","setAlert","setPage","setTotalPages","loading","setLoading","onSubmit","e","preventDefault","axios","get","process","then","res","data","totalItems","items","Math","ceil","reset","catch","err","response","error","message","getBook","Input","type","placeholder","autoComplete","onChange","value","name","CircularProgress","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37ab6a01.chunk.js","sourcesContent":["import React from 'react'\n\nconst Alert = ({alert}) => {\n    return (\n        <div class=\"alert\">\n            <h4>{alert}</h4>\n        </div>\n    )\n}\n\nexport default Alert\n","export default __webpack_public_path__ + \"static/media/no_image.73ac92f9.png\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Image from \"../assets/no_image.png\";\nimport ReactCardFlip from \"react-card-flip\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    width: \"265px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    padding: \"20px 5px 10px 5px\",\n  },\n  image: {\n    margin: \"0 28px\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  categories: {\n    color: \"black\",\n    textAlign: \"center\",\n    width: \"11rem\",\n  },\n  title: {\n    fontWeight: \"bold\",\n    display: \"-webkit-box\",\n    lineHeight: \"18px\",\n    maxHeight: \"41px\",\n    boxOrient: \"vertical\",\n    lineClamp: 3,\n    wordBreak: \"break-all\",\n    overflow: \"hidden\",\n  },\n  authors: {\n    color: \"grey\",\n    fontSize: 14,\n    padding: \"0 3px\",\n  },\n}));\n\nconst Book = ({ book, handleCardFlip, isFlipped }) => {\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = React.useState(false);\n  const {\n    title,\n    authors,\n    categories,\n    description,\n    language,\n    infoLink,\n  } = book.volumeInfo;\n  const image = book.volumeInfo.imageLinks\n    ? book.volumeInfo.imageLinks.thumbnail\n    : Image;\n\n  const cardStyle = {\n    display: \"flex\",\n    margin: \"0 0 40px 0\",\n    minHeight: \"360px\",\n  };\n\n  return (\n    <div className=\"book-container\">\n      <ReactCardFlip\n        isFlipped={isFlipped}\n        flipDirection=\"vertical\"\n        containerStyle={cardStyle}\n      >\n        <Card className={classes.root}>\n          <a href={infoLink} target=\"_blank\">\n            <img src={image} alt={title} className={classes.image} />\n          </a>\n          <CardHeader\n            titleTypographyProps={{ variant: \"p\" }}\n            className={classes.title}\n            title={title}\n          />\n          <Typography className={classes.authors}>\n            {authors && authors.length > 1 ? authors.join(\", \") : authors}\n          </Typography>\n          <CardActions disableSpacing>\n            {\n              <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                {language.toUpperCase()}\n              </Avatar>\n            }\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className={classes.categories}\n            >\n              {categories ?? \"No categories\"}\n            </Typography>\n            <IconButton\n              onClick={handleCardFlip}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMoreIcon />\n            </IconButton>\n          </CardActions>\n        </Card>\n\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography paragraph>Description:</Typography>\n            <Typography variant=\"body2\">\n              {description\n                ? description.length >= 320\n                  ? description.slice(0, 375) + \"...\"\n                  : description\n                : \"No description available\"}\n            </Typography>\n            <IconButton\n              onClick={handleCardFlip}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMoreIcon />\n            </IconButton>\n          </CardContent>\n        </Card>\n      </ReactCardFlip>\n    </div>\n  );\n};\n\nexport default Book;\n","import React, { useState } from \"react\";\nimport Book from \"./Book\";\nimport { BOOKS_PER_PAGE } from \"../utility/constants\";\n\nconst Books = ({ books, page }) => {\n  const [bookStatus, setBookStatus] = useState(Array(8).fill(false));\n  const [isFlipped, setIsFlipped] = useState(false);\n  const startIndex = (page - 1) * BOOKS_PER_PAGE;\n  const selectedBooks = books.slice(startIndex, startIndex + BOOKS_PER_PAGE);\n\n  const handleCardFlip = (index) => {\n    const bookStatusCopy = [...bookStatus];\n\n    console.log(bookStatusCopy);\n    if (bookStatusCopy[index]) {\n      bookStatusCopy.fill(false);\n      setIsFlipped(!isFlipped);\n    } else {\n      bookStatusCopy.fill(false);\n      bookStatusCopy[index] = true;\n    }\n\n    setBookStatus(bookStatusCopy);\n  };\n\n  return (\n    <div className=\"book-list\">\n      {selectedBooks.map((book, index) => (\n        <Book\n          key={book.id}\n          book={book}\n          page={page}\n          handleCardFlip={() => handleCardFlip(index)}\n          isFlipped={bookStatus[index]}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Books;\n","export const BOOKS_PER_PAGE = 8;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n    container: {\n        backgroundColor: 'white',\n    }\n  }));\n\nconst Pagination = ({totalPages, handleClick}) => {\n    const classes = useStyles();\n    const pages = [...Array(totalPages).keys()].map(num => num + 1);\n \n    return (\n        <ButtonGroup  variant=\"contained\"  classes={{\n            root: classes.container\n          }}>\n          { pages.map(num =>\n          <Button key={num} onClick={() => handleClick(num)}>{num}</Button>\n        )}\n      </ButtonGroup>\n    )\n}\n\nexport default Pagination;\n\n\n\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Alert from \"./components/Alert\";\nimport { Input } from \"@material-ui/core\";\nimport Books from \"./components/Books\";\nimport Pagination from \"./components/Pagination\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { BOOKS_PER_PAGE } from \"./utility/constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    color: \"white\",\n    backgroundColor: \"rgba(52, 52, 52, 0.8)\",\n    \"&&&:before\": {\n      borderBottom: \"none\",\n    },\n    \"&&:after\": {\n      borderBottom: \"none\",\n    },\n  },\n  spinner: {\n    color: \"white\",\n  },\n  search: {\n    color: \"white\",\n    backgroundColor: \"grey\",\n    padding: \"0 10px\",\n    borderRadius: \"5px\",\n    \"&&&:before\": {\n      borderBottom: \"none\",\n    },\n    \"&&:after\": {\n      borderBottom: \"none\",\n    },\n  },\n}));\nconst App = () => {\n  const [query, setQuery] = useState(\"\");\n  const [books, setBooks] = useState([]);\n  const [alert, setAlert] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const apiKey = process.env.REACT_APP_API_KEY;\n  const classes = useStyles();\n  const maxResults = \"40\";\n\n  const getBook = (e) => {\n    if (query !== \"\") {\n      setLoading(true);\n      axios\n        .get(\n          `https://www.googleapis.com/books/v1/volumes?q=${query}&maxResults=${maxResults}&key=${apiKey}`\n        )\n        .then((res) => {\n          if (res.data.totalItems === 0) {\n            setLoading(false);\n            return setAlert(\n              \"No search results. Please try again with another keyword\"\n            );\n          } else {\n            setBooks(res.data.items);\n            setTotalPages(Math.ceil(res.data.items.length / BOOKS_PER_PAGE));\n          }\n        })\n        .then((res) => {\n          setQuery(\"\");\n          setAlert(\"\");\n          e.target.reset();\n          setLoading(false);\n        })\n        .catch((err) => {\n          setLoading(true);\n          return setAlert(err.response.data.error.message);\n        });\n    } else {\n      setAlert(\"Please fill in the search box\");\n    }\n  };\n\n  const onChange = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const handleClick = (num) => {\n    setPage(num);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    getBook(e);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Book Search App</h1>\n      <form onSubmit={onSubmit}>\n        {alert !== \"\" && <Alert alert={alert} />}\n        <Input\n          type=\"text\"\n          placeholder=\"Enter book title\"\n          autoComplete=\"off\"\n          onChange={onChange}\n          name=\"query\"\n          classes={{\n            root: classes.root,\n          }}\n        />\n        <Input\n          type=\"submit\"\n          value=\"search\"\n          classes={{\n            root: classes.search,\n          }}\n        />\n      </form>\n      <div className=\"spinner-container\">\n        {loading && (\n          <div className=\"spinner\">\n            <CircularProgress\n              classes={{\n                root: classes.spinner,\n              }}\n            />\n          </div>\n        )}\n      </div>\n\n      {!loading && totalPages > 1 && <p className=\"pageNumber\">Page {page}</p>}\n      {!loading && <Books books={books} page={page} />}\n      <Pagination totalPages={totalPages} handleClick={handleClick} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}